# coding: utf-8

"""
    CLOUD API

     IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

    The version of the OpenAPI document: 6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ionos_cloud_api_v6_client.security_groups_api import SecurityGroupsApi


class TestSecurityGroupsApi(unittest.TestCase):
    """SecurityGroupsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SecurityGroupsApi()

    def tearDown(self) -> None:
        pass

    def test_datacenters_securitygroups_delete(self) -> None:
        """Test case for datacenters_securitygroups_delete

        Delete a Security Group
        """
        pass

    def test_datacenters_securitygroups_find_by_id(self) -> None:
        """Test case for datacenters_securitygroups_find_by_id

        Retrieve a Security Group
        """
        pass

    def test_datacenters_securitygroups_firewallrules_delete(self) -> None:
        """Test case for datacenters_securitygroups_firewallrules_delete

        Remove a Firewall Rule from a Security Group
        """
        pass

    def test_datacenters_securitygroups_firewallrules_post(self) -> None:
        """Test case for datacenters_securitygroups_firewallrules_post

        Create Firewall rule to a Security Group
        """
        pass

    def test_datacenters_securitygroups_get(self) -> None:
        """Test case for datacenters_securitygroups_get

        List Security Groups
        """
        pass

    def test_datacenters_securitygroups_patch(self) -> None:
        """Test case for datacenters_securitygroups_patch

        Partially modify Security Group
        """
        pass

    def test_datacenters_securitygroups_post(self) -> None:
        """Test case for datacenters_securitygroups_post

        Create a Security Group
        """
        pass

    def test_datacenters_securitygroups_put(self) -> None:
        """Test case for datacenters_securitygroups_put

        Modify Security Group
        """
        pass

    def test_datacenters_securitygroups_rules_find_by_id(self) -> None:
        """Test case for datacenters_securitygroups_rules_find_by_id

        Retrieve security group rule by id
        """
        pass

    def test_datacenters_securitygroups_rules_get(self) -> None:
        """Test case for datacenters_securitygroups_rules_get

        List Security Group rules
        """
        pass

    def test_datacenters_securitygroups_rules_patch(self) -> None:
        """Test case for datacenters_securitygroups_rules_patch

        Partially modify Security Group Rules
        """
        pass

    def test_datacenters_securitygroups_rules_put(self) -> None:
        """Test case for datacenters_securitygroups_rules_put

        Modify a Security Group Rule
        """
        pass

    def test_datacenters_servers_nics_securitygroups_put(self) -> None:
        """Test case for datacenters_servers_nics_securitygroups_put

        Attach a list of Security Groups to a NIC
        """
        pass

    def test_datacenters_servers_securitygroups_put(self) -> None:
        """Test case for datacenters_servers_securitygroups_put

        Attach a list of Security Groups to a Server
        """
        pass


if __name__ == '__main__':
    unittest.main()
