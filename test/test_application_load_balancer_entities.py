# coding: utf-8

"""
    CLOUD API

     IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

    The version of the OpenAPI document: 6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_load_balancer_entities import ApplicationLoadBalancerEntities

class TestApplicationLoadBalancerEntities(unittest.TestCase):
    """ApplicationLoadBalancerEntities unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationLoadBalancerEntities:
        """Test ApplicationLoadBalancerEntities
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationLoadBalancerEntities`
        """
        model = ApplicationLoadBalancerEntities()
        if include_optional:
            return ApplicationLoadBalancerEntities(
                forwardingrules = openapi_client.models.application_load_balancer_forwarding_rules.ApplicationLoadBalancerForwardingRules(
                    id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c', 
                    type = 'collection', 
                    href = '<RESOURCE-URI>', 
                    items = [
                        openapi_client.models.application_load_balancer_forwarding_rule.ApplicationLoadBalancerForwardingRule(
                            id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c', 
                            type = 'forwarding-rule', 
                            href = '<RESOURCE-URI>', 
                            metadata = openapi_client.models.datacenter_element_metadata.DatacenterElementMetadata(
                                etag = '45480eb3fbfc31f1d916c1eaa4abdcc3', 
                                created_date = '2015-12-04T14:34:09.809Z', 
                                created_by = 'user@example.com', 
                                created_by_user_id = 'user@example.com', 
                                last_modified_date = '2015-12-04T14:34:09.809Z', 
                                last_modified_by = 'user@example.com', 
                                last_modified_by_user_id = '63cef532-26fe-4a64-a4e0-de7c8a506c90', 
                                state = 'AVAILABLE', ), 
                            properties = openapi_client.models.application_load_balancer_forwarding_rule_properties.ApplicationLoadBalancerForwardingRuleProperties(
                                name = 'My Application Load Balancer forwarding rule', 
                                protocol = 'HTTP', 
                                listener_ip = '81.173.1.2', 
                                listener_port = 8080, 
                                client_timeout = 50, 
                                server_certificates = ["3839d24f-57bd-408e-96ee-8da3d2db5a03","a6b4f7d5-b23a-4f53-b83e-8a6528ab4612"], 
                                http_rules = [
                                    openapi_client.models.application_load_balancer_http_rule.ApplicationLoadBalancerHttpRule(
                                        name = 'My Application Load Balancer HTTP rule', 
                                        type = 'FORWARD', 
                                        target_group = '96e514d0-73e4-4abd-8fbc-c0f53b79bfae', 
                                        drop_query = True, 
                                        location = 'www.ionos.com', 
                                        status_code = 301, 
                                        response_message = 'Application Down', 
                                        content_type = 'text/html', 
                                        conditions = [
                                            openapi_client.models.application_load_balancer_http_rule_condition.ApplicationLoadBalancerHttpRuleCondition(
                                                type = 'HEADER', 
                                                condition = 'STARTS_WITH', 
                                                negate = False, 
                                                key = 'forward-at', 
                                                value = 'Friday', )
                                            ], )
                                    ], ), )
                        ], 
                    offset = 0, 
                    limit = 1000, 
                    _links = openapi_client.models.pagination_links.PaginationLinks(
                        prev = '<PREVIOUS-PAGE-URI>', 
                        self = '<THIS-PAGE-URI>', 
                        next = '<NEXT-PAGE-URI>', ), )
            )
        else:
            return ApplicationLoadBalancerEntities(
        )
        """

    def testApplicationLoadBalancerEntities(self):
        """Test ApplicationLoadBalancerEntities"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
