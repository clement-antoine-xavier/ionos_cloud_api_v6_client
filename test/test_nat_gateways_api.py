# coding: utf-8

"""
    CLOUD API

     IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

    The version of the OpenAPI document: 6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ionos_cloud_api_v6_client.nat_gateways_api import NATGatewaysApi


class TestNATGatewaysApi(unittest.TestCase):
    """NATGatewaysApi unit test stubs"""

    def setUp(self) -> None:
        self.api = NATGatewaysApi()

    def tearDown(self) -> None:
        pass

    def test_datacenters_natgateways_delete(self) -> None:
        """Test case for datacenters_natgateways_delete

        Delete NAT Gateways
        """
        pass

    def test_datacenters_natgateways_find_by_nat_gateway_id(self) -> None:
        """Test case for datacenters_natgateways_find_by_nat_gateway_id

        Retrieve NAT Gateways
        """
        pass

    def test_datacenters_natgateways_flowlogs_delete(self) -> None:
        """Test case for datacenters_natgateways_flowlogs_delete

        Delete NAT Gateway Flow Logs
        """
        pass

    def test_datacenters_natgateways_flowlogs_find_by_flow_log_id(self) -> None:
        """Test case for datacenters_natgateways_flowlogs_find_by_flow_log_id

        Retrieve NAT Gateway Flow Logs
        """
        pass

    def test_datacenters_natgateways_flowlogs_get(self) -> None:
        """Test case for datacenters_natgateways_flowlogs_get

        List NAT Gateway Flow Logs
        """
        pass

    def test_datacenters_natgateways_flowlogs_patch(self) -> None:
        """Test case for datacenters_natgateways_flowlogs_patch

        Partially modify NAT Gateway Flow Logs
        """
        pass

    def test_datacenters_natgateways_flowlogs_post(self) -> None:
        """Test case for datacenters_natgateways_flowlogs_post

        Create a NAT Gateway Flow Log
        """
        pass

    def test_datacenters_natgateways_flowlogs_put(self) -> None:
        """Test case for datacenters_natgateways_flowlogs_put

        Modify NAT Gateway Flow Logs
        """
        pass

    def test_datacenters_natgateways_get(self) -> None:
        """Test case for datacenters_natgateways_get

        List NAT Gateways
        """
        pass

    def test_datacenters_natgateways_patch(self) -> None:
        """Test case for datacenters_natgateways_patch

        Partially modify NAT Gateways
        """
        pass

    def test_datacenters_natgateways_post(self) -> None:
        """Test case for datacenters_natgateways_post

        Create a NAT Gateway
        """
        pass

    def test_datacenters_natgateways_put(self) -> None:
        """Test case for datacenters_natgateways_put

        Modify NAT Gateways
        """
        pass

    def test_datacenters_natgateways_rules_delete(self) -> None:
        """Test case for datacenters_natgateways_rules_delete

        Delete NAT Gateway rules
        """
        pass

    def test_datacenters_natgateways_rules_find_by_nat_gateway_rule_id(self) -> None:
        """Test case for datacenters_natgateways_rules_find_by_nat_gateway_rule_id

        Retrieve NAT Gateway rules
        """
        pass

    def test_datacenters_natgateways_rules_get(self) -> None:
        """Test case for datacenters_natgateways_rules_get

        List NAT Gateway rules
        """
        pass

    def test_datacenters_natgateways_rules_patch(self) -> None:
        """Test case for datacenters_natgateways_rules_patch

        Partially Modify a NAT Gateway Rule by ID
        """
        pass

    def test_datacenters_natgateways_rules_post(self) -> None:
        """Test case for datacenters_natgateways_rules_post

        Create a NAT Gateway Rule
        """
        pass

    def test_datacenters_natgateways_rules_put(self) -> None:
        """Test case for datacenters_natgateways_rules_put

        Modify a NAT Gateway Rule by ID
        """
        pass


if __name__ == '__main__':
    unittest.main()
