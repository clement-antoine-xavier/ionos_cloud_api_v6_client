# coding: utf-8

"""
    CLOUD API

     IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

    The version of the OpenAPI document: 6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ionos_cloud_api_v6_client.models.datacenter_properties import DatacenterProperties

class TestDatacenterProperties(unittest.TestCase):
    """DatacenterProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DatacenterProperties:
        """Test DatacenterProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DatacenterProperties`
        """
        model = DatacenterProperties()
        if include_optional:
            return DatacenterProperties(
                name = 'Production datacenter',
                description = 'My Production Datacenter',
                location = 'us/las',
                version = 8,
                features = ["SSD"],
                sec_auth_protection = True,
                cpu_architecture = [
                    ionos_cloud_api_v6_client.models.cpu_architecture_properties.CpuArchitectureProperties(
                        cpu_family = 'INTEL_ICELAKE', 
                        max_cores = 62, 
                        max_ram = 245760, 
                        vendor = 'AuthenticAMD', )
                    ],
                ipv6_cidr_block = '2001:db8:b06d:8f00::/56',
                default_security_group_id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c'
            )
        else:
            return DatacenterProperties(
                location = 'us/las',
        )
        """

    def testDatacenterProperties(self):
        """Test DatacenterProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
