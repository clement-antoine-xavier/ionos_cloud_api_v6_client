# coding: utf-8

"""
    CLOUD API

     IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

    The version of the OpenAPI document: 6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.contract_properties import ContractProperties

class TestContractProperties(unittest.TestCase):
    """ContractProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContractProperties:
        """Test ContractProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContractProperties`
        """
        model = ContractProperties()
        if include_optional:
            return ContractProperties(
                contract_number = 12345,
                owner = 'user@example.com',
                status = 'BILLABLE',
                reg_domain = 'ionos.de',
                resource_limits = openapi_client.models.resource_limits.ResourceLimits(
                    cores_per_server = 4, 
                    cores_per_contract = 8, 
                    cores_provisioned = 7, 
                    ram_per_server = 20480, 
                    ram_per_contract = 20480, 
                    ram_provisioned = 14336, 
                    hdd_limit_per_volume = 614400, 
                    hdd_limit_per_contract = 61440, 
                    hdd_volume_provisioned = 10240, 
                    ssd_limit_per_volume = 614400, 
                    ssd_limit_per_contract = 614400, 
                    ssd_volume_provisioned = 204800, 
                    das_volume_provisioned = 51200, 
                    reservable_ips = 1, 
                    reserved_ips_on_contract = 1, 
                    reserved_ips_in_use = 0, 
                    k8s_cluster_limit_total = 5, 
                    k8s_clusters_provisioned = 0, 
                    nlb_limit_total = 5, 
                    nlb_provisioned = 0, 
                    nat_gateway_limit_total = 5, 
                    nat_gateway_provisioned = 0, 
                    security_groups_per_vdc = 200, 
                    security_groups_per_resource = 10, 
                    rules_per_security_group = 100, )
            )
        else:
            return ContractProperties(
        )
        """

    def testContractProperties(self):
        """Test ContractProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
