# coding: utf-8

"""
    CLOUD API

     IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

    The version of the OpenAPI document: 6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.kubernetes_cluster_properties import KubernetesClusterProperties

class TestKubernetesClusterProperties(unittest.TestCase):
    """KubernetesClusterProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KubernetesClusterProperties:
        """Test KubernetesClusterProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KubernetesClusterProperties`
        """
        model = KubernetesClusterProperties()
        if include_optional:
            return KubernetesClusterProperties(
                name = 'k8s',
                k8s_version = '1.15.4',
                maintenance_window = openapi_client.models.kubernetes_maintenance_window.KubernetesMaintenanceWindow(
                    day_of_the_week = 'Monday', 
                    time = '13:00:00', ),
                available_upgrade_versions = ["1.16.4","1.17.7"],
                viable_node_pool_versions = ["1.17.7","1.18.2"],
                public = True,
                location = 'de/fra',
                nat_gateway_ip = '198.51.100.100',
                node_subnet = '192.168.0.0/16',
                api_subnet_allow_list = ["1.2.3.4/32","2002::1234:abcd:ffff:c0a8:101/64","1.2.3.4","2002::1234:abcd:ffff:c0a8:101"],
                s3_buckets = [
                    openapi_client.models.s3_bucket.S3Bucket(
                        name = 'My Bucket', )
                    ]
            )
        else:
            return KubernetesClusterProperties(
                name = 'k8s',
        )
        """

    def testKubernetesClusterProperties(self):
        """Test KubernetesClusterProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
