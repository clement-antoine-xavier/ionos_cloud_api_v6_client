# coding: utf-8

"""
    CLOUD API

     IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.

    The version of the OpenAPI document: 6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ionos_cloud_api_v6_client.user_management_api import UserManagementApi


class TestUserManagementApi(unittest.TestCase):
    """UserManagementApi unit test stubs"""

    def setUp(self) -> None:
        self.api = UserManagementApi()

    def tearDown(self) -> None:
        pass

    def test_um_groups_delete(self) -> None:
        """Test case for um_groups_delete

        Delete groups
        """
        pass

    def test_um_groups_find_by_id(self) -> None:
        """Test case for um_groups_find_by_id

        Retrieve groups
        """
        pass

    def test_um_groups_get(self) -> None:
        """Test case for um_groups_get

        List all groups
        """
        pass

    def test_um_groups_post(self) -> None:
        """Test case for um_groups_post

        Create groups
        """
        pass

    def test_um_groups_put(self) -> None:
        """Test case for um_groups_put

        Modify groups
        """
        pass

    def test_um_groups_resources_get(self) -> None:
        """Test case for um_groups_resources_get

        Retrieve group resources
        """
        pass

    def test_um_groups_shares_delete(self) -> None:
        """Test case for um_groups_shares_delete

        Remove group shares
        """
        pass

    def test_um_groups_shares_find_by_resource_id(self) -> None:
        """Test case for um_groups_shares_find_by_resource_id

        Retrieve group shares
        """
        pass

    def test_um_groups_shares_get(self) -> None:
        """Test case for um_groups_shares_get

        List group shares 
        """
        pass

    def test_um_groups_shares_post(self) -> None:
        """Test case for um_groups_shares_post

        Add group shares
        """
        pass

    def test_um_groups_shares_put(self) -> None:
        """Test case for um_groups_shares_put

        Modify group share privileges
        """
        pass

    def test_um_groups_users_delete(self) -> None:
        """Test case for um_groups_users_delete

        Remove users from groups
        """
        pass

    def test_um_groups_users_get(self) -> None:
        """Test case for um_groups_users_get

        List group members
        """
        pass

    def test_um_groups_users_post(self) -> None:
        """Test case for um_groups_users_post

        Add a Group Member
        """
        pass

    def test_um_resources_find_by_type(self) -> None:
        """Test case for um_resources_find_by_type

        List resources by type
        """
        pass

    def test_um_resources_find_by_type_and_id(self) -> None:
        """Test case for um_resources_find_by_type_and_id

        Retrieve resources by type
        """
        pass

    def test_um_resources_get(self) -> None:
        """Test case for um_resources_get

        List all resources
        """
        pass

    def test_um_users_delete(self) -> None:
        """Test case for um_users_delete

        Delete users
        """
        pass

    def test_um_users_find_by_id(self) -> None:
        """Test case for um_users_find_by_id

        Retrieve users
        """
        pass

    def test_um_users_get(self) -> None:
        """Test case for um_users_get

        List all users 
        """
        pass

    def test_um_users_groups_get(self) -> None:
        """Test case for um_users_groups_get

        Retrieve group resources by user ID
        """
        pass

    def test_um_users_owns_get(self) -> None:
        """Test case for um_users_owns_get

        Retrieve user resources by user ID
        """
        pass

    def test_um_users_post(self) -> None:
        """Test case for um_users_post

        Create users
        """
        pass

    def test_um_users_put(self) -> None:
        """Test case for um_users_put

        Modify users
        """
        pass


if __name__ == '__main__':
    unittest.main()
